#!/usr/bin/env bash
set -euo pipefail

script_dir() {
  SOURCE="${BASH_SOURCE[0]}"
  while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
  done
  echo "$( cd -P "$( dirname "$SOURCE" )" && pwd )"
}

. "$(script_dir)/config.bash"

ESC_SEQ="\x1b["
COL_RESET=$ESC_SEQ"39;49;00m"
COL_RED=$ESC_SEQ"31;01m"
COL_GREEN=$ESC_SEQ"32;01m"
COL_YELLOW=$ESC_SEQ"33;01m"
COL_BLUE=$ESC_SEQ"34;01m"
COL_MAGENTA=$ESC_SEQ"35;01m"
COL_CYAN=$ESC_SEQ"36;01m"

main() {
  local cfg_dir="$(config_find_dir)"
  local cmd="${1:-}"
  shift || true

  local cfg_file_path="${cfg_dir}/config"
  if ! [[ -f $cfg_file_path ]]; then
    echo -e "$COL_RED>>> No config file found, exiting$COL_RESET"
    exit 1
  else
    . "$cfg_file_path"
    export PROJECT
  fi

  if [[ $cfg_dir != "" ]]; then
    echo -e "$COL_CYAN>>> Using config from \"$cfg_dir\"$COL_RESET"

    case "$cmd" in
    "build")
      docker build --file "${cfg_dir}/Dockerfile" --tag "${PROJECT}-dev" --force-rm "${cfg_dir}/.."
      ;;
    "prep")
      local prep_container="$(docker-compose --file "${cfg_dir}/docker-compose.yml" --project-name "${PROJECT}-dev" run -d app .docker/prep.sh)"
      docker attach "$prep_container" || true
      local exit_code="$(docker wait "$prep_container")"

      if [[ $exit_code -eq 0 ]]; then
        echo -e "$COL_GREEN>>> Prep successful, committing$COL_RESET"
        docker commit "$prep_container" "${PROJECT}_dev" > /dev/null
      else
        echo -e "$COL_RED>>> Prep failed, skipping commit$COL_RESET"
        exit 1
      fi
      ;;
    "app")
      exec docker-compose --file "${cfg_dir}/docker-compose.yml" --project-name "${PROJECT}-dev" run app "$@"
      ;;
    "c")
      exec docker-compose --file "${cfg_dir}/docker-compose.yml" --project-name "${PROJECT}-dev" "$@"
      ;;
    *)
      echo -e "$COL_RED>>> Command \"$cmd\" unknown, exiting$COL_RESET"
      exit 1
    esac
  else
    echo "$COL_RED>>> Did not find config, exiting$COL_RESET"
  fi
}

main "$@"
